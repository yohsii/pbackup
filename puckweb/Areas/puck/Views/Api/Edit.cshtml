@model puck.core.Base.BaseModel

@{
    Layout = null;
    ViewBag.Level0Type = Model?.GetType();
    ViewBag.Model = Model;
    puck.core.Entities.PuckWorkflowItem wfi = null;
    if (ViewBag.WorkflowItem != null) {
        wfi = ViewBag.WorkflowItem;
    }
    var locked = false;
}

@if (ViewBag.Unauthorized != null && ViewBag.Unauthorized == true)
{
    <script>
        msg(false, "you are not authorized to edit this page");
    </script>
}
else if (Model == null)
{
    <script>
        msg(false, "page doesn't exist");
    </script>
}
else
{
    if (ViewBag.TypeMissing)
    {
        <p class="text-center mt-3">Type "@ViewBag.MissingType" is missing, cannot load the edit page.</p>
    }
    else
    {
        @if (ViewBag.WorkflowItem != null)
        {
            <script>
                workflowItems["@Model.Id@Model.Variant"] = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.WorkflowItem));

                @if (wfi != null && wfi.LockedUntil.HasValue && wfi.LockedUntil > DateTime.Now)
                {
                    locked = true;
                    @Html.Raw($"contentLocks['{Model.Id}{Model.Variant}'] = true;")
                    @if (wfi.LockedBy != User.Identity.Name)
                    {
                        @Html.Raw($"msg(undefined,\"content locked by {wfi.LockedBy} until {wfi.LockedUntil.Value.ToString("HH:mm:ss")}\");");
                    }
                }
                else {
                    @Html.Raw($"contentLocks['{Model.Id}{Model.Variant}'] = false;")
                }
            </script>
        }
<div class="content_edit_page">
    @using (Html.BeginForm("Edit", "Api", new { p_type = Model.GetType().Name, p_path = ViewContext.HttpContext.Request.Query["p_path"].ToString() }, FormMethod.Post))
    {
        @Html.EditorForModel()
        
        <div class="edit-buttons">
            @if (wfi != null && wfi.LockedUntil.HasValue && wfi.LockedUntil > DateTime.Now && wfi.LockedBy == User.Identity.Name)
            {
                <button title="unlock" class="content_unlock content_btns" data-toggle="tooltip" data-placement="bottom" onkeyup="event.preventDefault()"><i class="fas fa-lock-open"></i></button>
            }
            <button title="preview" class="content_preview content_btns"><i class="fas fa-eye"></i></button>
            @if (!locked || (locked && wfi.LockedBy==User.Identity.Name))
            {
            <button title="update" class="content_update content_btns"><i class="fas fa-edit"></i></button>
            <button title="publish" class="content_publish content_btns"><i class="fas fa-check-square"></i></button>
            }
        </div>
        
        
    }
</div>
    }
}