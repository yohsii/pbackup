@model puck.core.Models.TasksModel

@{
    Layout = null;
}
    <div class="developer settings">
        
        @*<div id="fieldtabs1" class="fieldwrapper">
            <div class="editor-label">
            @Html.LabelFor(model => model.GeneratedModels)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.GeneratedModels)
                @Html.ValidationMessageFor(model => model.GeneratedModels)
            </div>
        </div>*@

        <div id="fieldtabs0" class="tasklist fieldwrapper">
            @Html.LabelFor(model => model.Tasks)
            <p>
                <a class="btn btn-link create_task" href="@Url.Action("Create")">
                    <i class="fas fa-plus-circle"></i>
                    New Task
                </a>

            </p>
            <table class="table">
                <tr>
                    <th scope="col">Type</th>
                    @*<th scope="col">
                        Name
                    </th>*@
                    <th scope="col">
                        Recurring
                    </th>
                    <th scope="col">
                        Interval (secs)
                    </th>
                    <th scope="col">
                        Run On
                    </th>
                    <th scope="col">
                        Last Run
                    </th>
                    <th scope="col"></th>
                </tr>

                @foreach (var item in Model.Tasks)
                {
                    <tr>
                        <td>@item.GetType().Name<br /><sub>@item.GetType().Namespace</sub></td>
                        @*<td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.Recurring)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IntervalSeconds)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RunOn)
                        </td>
                        <td>
                            @*Html.DisplayFor(modelItem => item.LastRun)*@
                            @item.LastRun
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) <br />
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "delete" })
                        </td>
                    </tr>
                }

            </table>
            @if (Model.Tasks.Count == 0) { 
                <p>there are no tasks to display</p>
            }
        </div>

    </div>

<style>
    #fieldtabs1
    {
        display:none;
    }
    #fieldtabs2
    {
        display:none;
    }
</style>
<script>
    $(document).ready(function () {
        var container = $("div.developer.settings");
        container.find("ul.nav li").click(function (e) {
            e.preventDefault();
            container.find("ul.nav li a").removeClass("active");
            $(this).find("a").addClass("active");
            container.find("div.fieldwrapper").hide();
            $($(this).find("a").attr("href")).show();
            codeMirror.refresh();
        });
    });
</script>