@model DateTime?
@{ 
    var guid = Guid.NewGuid();
}
<div class="datepicker_@ViewData.TemplateInfo.HtmlFieldPrefix">
@if(ViewData.ModelMetadata.HideSurroundingHtml){
    <input type="hidden" data-guid="@guid.ToString()" name="@ViewData.TemplateInfo.HtmlFieldPrefix" value="@(Model.HasValue?Model.Value.ToString():"")" />
}
else if (ViewData.ModelMetadata.IsReadOnly)
{
    <input type="text" data-guid="@guid.ToString()" readonly name="@ViewData.TemplateInfo.HtmlFieldPrefix" value="@(Model.HasValue?Model.Value.ToString():"")" />
}
else
{ 
    <input type="text" autocomplete="off" data-guid="@guid.ToString()" name="@ViewData.TemplateInfo.HtmlFieldPrefix" value="@(Model.HasValue?Model.Value.ToString():"")" />
    <script type="text/javascript">
        onAfterDom(function () {
            var guid = '@Html.Raw(guid.ToString())';
            //var propertyName = ".datepicker_@ViewData.ModelMetadata.PropertyName input";
            var query = "input[data-guid='"+guid+"']";
            $(query).datetimepicker({ dateFormat: 'dd/mm/yy', timeFormat: 'HH:mm:ss' });
        });
    </script>
}
</div>
